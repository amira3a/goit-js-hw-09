{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAgBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxBbL,EAAKY,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMT,EAAQU,SAASf,EAAKgB,SAASX,MAAMY,OACrCC,EAAOH,SAASf,EAAKgB,SAASE,KAAKD,OACnCE,EAASJ,SAASf,EAAKgB,SAASG,OAAOF,OAE7C,IAAI,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC1BjB,EAAciB,EAAGf,GAASe,EAAI,GAAKF,GAChCG,MAAMC,GAAWC,QAAQC,IAAI,WAAWF,EAAOlB,2BAA2BkB,EAAOjB,aACjFoB,OAAOC,GAAUH,QAAQG,MAAM,WAAWA,EAAMtB,2BAA2BsB,EAAMrB,YAAW","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n  \n  for(let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then((result) => console.log(`Promise ${result.position} resolved after ${result.delay}ms`))\n      .catch((error) => console.error(`Promise ${error.position} rejected after ${error.delay}ms`));\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if(shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","parseInt","elements","value","step","amount","i","then","result","console","log","catch","error"],"version":3,"file":"03-promises.98bcdc5c.js.map"}